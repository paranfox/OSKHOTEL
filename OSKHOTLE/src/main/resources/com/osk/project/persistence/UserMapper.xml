<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper XML 설정 태그 -->

<!-- namespace : 연결할 Mapper 인터페이스 경로 및 이름 -->
<mapper namespace="com.osk.project.persistence.UserMapper"> <!-- mapper랑 경로랑 이름이 똑같아야 함 -->

	<!-- <resultMap> : DB 쿼리 반환 데이터와 Entity 클래스의 멤버 변수 매핑을 정의하는 태그 - 속성 type 
		: 연결할 클래스 id : SQL 쿼리 정의 태그에서 인식되는 이름 -->
	<resultMap type="com.osk.project.domain.UserVO"
		id="userResultMap">

		<!-- <id> : key 컬럼 매핑 태그 <result> : 컬럼 매핑 태그 - 속성 property : Entity 멤버 
			변수 column : DB 테이블 컬럼 -->
		<id property="userId" column="USER_ID" />
		<result property="userPassword" column="USER_PASSWORD" />
		<result property="userName" column="USER_NAME" />
		<result property="userEmail" column="USER_EMAIL" />
		<result property="userPhone" column="USER_PHONE" />
		<result property="userMembership" column="USER_MEMBERSHIP" />
	</resultMap>

	<!-- <select>, <insert>, <update>, <delete> : SQL 쿼리 정의 태그 - 속성 id : Mapper 
		인터페이스 메서드 매핑 역할. resultMap : 쿼리 결과를 resultMap에 매핑. <resultMap> 태그의 id를 적용 
		resultType : 쿼리 결과를 클래스에 매핑 -->


	<insert id="insertUser"> <!-- id가 insert랑 같아야 함 -->
		<!-- 게시글 등록 -->
		INSERT INTO HOTEL_USER

		VALUES
		(#{userId}, #{userPassword}, #{userName},
		#{userEmail},
		#{userPhone},
		null)
	</insert>
	<!-- #{변수명} : Mapper 인터페이스 메소드 매개변수와 매핑되어 전송된 데이터를 적용 -->

	<select id="getUserByEmail" resultMap="userResultMap"> <!-- MAPPING 한것 -->
		<!-- 전체 게시글 조회 -->
		SELECT * FROM HOTEL_USER WHERE USER_EMAIL = #{userEmail}
		<!-- SELECT BOARD_ID, BOARD_TITLE, BOARD_CONTENT, MEMBER_ID, BOARD_DATE_CREATED -->
	</select>

	<select id="getUserById" resultMap="userResultMap"> <!-- MAPPING 한것 -->
		<!-- 전체 게시글 조회 -->
		SELECT * FROM HOTEL_USER WHERE USER_ID = #{userId}
		<!-- SELECT BOARD_ID, BOARD_TITLE, BOARD_CONTENT, MEMBER_ID, BOARD_DATE_CREATED -->
	</select>

	<select id="logincheck" resultMap="userResultMap"> <!-- MAPPING 한것 -->
		<!-- 전체 게시글 조회 -->
		SELECT USER_NAME
		FROM HOTEL_USER
		WHERE userId=#{userId} and userPassword=#{userPassword}
		<!-- SELECT BOARD_ID, BOARD_TITLE, BOARD_CONTENT, MEMBER_ID, BOARD_DATE_CREATED -->
	</select>

	<select id="selectOne" resultMap="userResultMap">
		<!-- 특정 게시글 조회 -->
		SELECT * FROM BOARD WHERE BOARD_ID = #{boardId}
	</select>

	<update id="update">
		<!-- 특정 게시글 수정 -->
		UPDATE BOARD SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT =
		#{boardContent},
		BOARD_DATE_CREATED = SYSDATE
		WHERE BOARD_ID =
		#{boardId}
	</update>

	<delete id="delete">
		<!-- 특정 게시글 삭제 -->

		DELETE FROM BOARD
		WHERE BOARD_ID = #{boardId}
	</delete>


</mapper>